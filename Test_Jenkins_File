def gv
pipeline{
        agent any
        tools {
                maven 'maven'
        }
        parameters {
                string (name: 'VERSION', defaultValue: '', description: 'version to deploy on prod')
                choice (name: 'VERSION', choices: ['1.1.0','1.1.1','1.1.3'], description: '')
                booleanParam (name: 'ExecuteTest', defaultValue: true, description:'')
        }
        stages {
                stage ('init'){
                        steps{
                                script {
                                        gv = load ("script.groovy")
                        }
                     }
                }
                stage('build'){
                        when {
                                expression {
                                        params.ExecuteTest==true
                                }
                        }
                        steps{
                                echo 'build is in progress'
                        }
                }

                stage ('test') {
                        steps {
                                echo 'testing is in progress'
                        }
        }
                stage('deployment'){
                        steps {
                                echo 'deployment is in progress'
                                echo "Deploying Version ${params.VERSION}"
                                }
                         }
                stage ('grovy_validation') {
                        steps{
                                script {
                                        gv.deploy_on_prod
                                }
                        }
                }
        }
        post {
                success {
                        echo 'pipeline is success'
                }
                always{
                        echo 'this message will always get printed'
                }
                failure {
                        echo 'this is failure message'
                }
        }

}
